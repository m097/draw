security:
    role_hierarchy:
        ROLE_ADMIN: [ 'ROLE_SONATA_ADMIN' ]
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        chain_provider:
            chain:
                providers: [ app_user_provider_id, app_user_provider_email ]
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider_id:
            entity:
                class: 'App\Entity\User'
                property: 'id'

        app_user_provider_email:
            entity:
                class: 'App\Entity\User'
                property: 'email'

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        admin:
            pattern: /admin(.*)
            context: user
            form_login:
                provider: app_user_provider_email
                login_path: admin_login
                use_forward: false
                check_path: admin_login
                failure_path: null
            logout:
                path: admin_logout
                target: admin_login
            anonymous: true
            guard:
                provider: chain_provider
                authenticators:
                    - 'Draw\Bundle\UserBundle\Sonata\Security\AdminLoginAuthenticator'
                    - 'Draw\Bundle\UserBundle\Security\MessageAuthenticator'
                entry_point: Draw\Bundle\UserBundle\Sonata\Security\AdminLoginAuthenticator
        main:
            context: user
            anonymous: true
            guard:
                provider: chain_provider
                authenticators:
                    - 'Draw\Bundle\UserBundle\Sonata\Security\AdminLoginAuthenticator'
                    - 'Draw\Bundle\UserBundle\Jwt\JwtAuthenticator'
                    - 'Draw\Bundle\UserBundle\Security\MessageAuthenticator'
                entry_point: 'Draw\Bundle\UserBundle\Sonata\Security\AdminLoginAuthenticator'

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
